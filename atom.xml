<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GordyBlog]]></title>
  <link href="http://blog.gordontillman.info/atom.xml" rel="self"/>
  <link href="http://blog.gordontillman.info/"/>
  <updated>2015-01-04T18:40:55-06:00</updated>
  <id>http://blog.gordontillman.info/</id>
  <author>
    <name><![CDATA[Gordon Tillman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Chrooted Desktop in Background]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-running-chrooted-desktop-in-background.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/running-chrooted-desktop-in-background</id>
    <content type="html"><![CDATA[<p>
I made a post yesterday that covered the steps required to install
Ubuntu on an ASUS C200 Chromebook.  One thing I noticed was that,
while you are running Ubuntu, it ties up your terminal window and
makes it unavailable for doing other tasks.
</p>

<p>
<!-- more -->
</p>


<p>
According to some information that <a href="https://github.com/dnschneid/crouton">I found here</a>, you should be able to
accomplish this via a parameter supplied to the <code>startxfce4</code> command.
For example:
</p>

<pre class="example">
startxfce4 -b
</pre>

<p>
That didn&#8217;t seem to work for me.  The command still ran in the foreground.
I found that just using the standard Unix/Linux way worked fine:
</p>

<div class="org-src-container">

<pre class="src src-sh">startxfce4 &gt; /dev/null 2&gt;&amp;1 &amp;
</pre>
</div>

<p>
<i>Note:</i>  You cannot prefix this with <code>nohup</code> and close out the
terminal completely.  Doing so will exit the chroot environment and
terminate Ubuntu.  But at least you know have access to the
command-line in that terminal and you don&#8217;t have to look at a bunch of
debug messages.
</p>

<p>
So far this Chromebook experiment is going very well. Lot&#8217;s of fun!
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Org-Octopress Notes]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-org-octopress-notes.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/org-octopress-notes</id>
    <content type="html"><![CDATA[<p>
I&#8217;ve been trying to sort-out the details of what is required to be
able to maintain a GitHub pages site via Octopress / org-octopress
from multiple computers. The slight complicating factor is that the
location of the git repository for the site is different on the two
computers that I am using.
</p>

<p>
<!-- more -->
</p>

<p>
The main laptop is my MacBook Pro.  The new, secondary, laptop is an
Asus C200 with 4GB RAM and a 32GB SSD.  Here are the repository
locations on the two machines:
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Machine</th>
<th scope="col" class="left">Org-Octopress Git Repository Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">MacBook Pro</td>
<td class="left">/Users/gordy/Documents/Personal/gordyt.github.io</td>
</tr>

<tr>
<td class="left">Asus C200</td>
<td class="left">/media/removable/gordy/Documents/g/gordyt.github.io</td>
</tr>
</tbody>
</table>

<br>

<p>
On the Asus I have a symlink in my <code>$HOME</code> directory the the
<code>Documents</code> folder on the external drive.  The external drive is a 16
CB SD card.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Setupfile</h2>
<div class="outline-text-2" id="text-1">
<p>
Org-octopress has a setting called <code>org-octopress-setup-file</code> that
points to your blog-specific information.  It references this file
when it exports your org-mode source file to the HTML file it
that Jeckyl uses to generate your GitHub pages site.
</p>

<p>
When you create a new post, Org-octopress fills in a skeleton org-mode
file that you use to write in to compose your blog post.  When it does
this it fills in the path for a setting at the top:
</p>

<pre class="example">
#+SETUPFILE: &lt;path-to-setupfile&gt;
</pre>

<p>
For this to work nicely, it is helpful to store your setup file a
place that you can reference with a nice relative path on all the
machines involved.  In my case I used this:
</p>

<pre class="example">
~/.emacs.d/octopress-setupfile.txt
</pre>

<p>
If I were maintaining multiple sites I would give the setup file for
each site a unique name.
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Keep your Repositories Straight!</h2>
<div class="outline-text-2" id="text-2">
<p>
The scripts that set-up your site structure handles everything for
you.  However, if you clone your existing site onto a new machine, you
must make sure that the following conditions are satisfied.  In what
follows <i>site-root</i> is the path to the main git repository on your
local machine where the site is being maintained.
</p>

<ul class="org-ul">
<li>&lt;site-root&gt; is a git repository with the following remotes:
<pre class="example">
octopress   git://github.com/imathis/octopress.git (fetch)
octopress   git://github.com/imathis/octopress.git (push)
origin  &lt;your-github-repository-path&gt; (fetch)
origin  &lt;your-github-repository-path&gt; (push)
</pre>
</li>
<li>It has the <i>source</i> branch checked-out
</li>
<li><code>&lt;site-root&gt;/_deploy</code> is a subdirectory that is maintained by
Jeckyl.  It is <i>also</i> a git repository with the following remotes:
<pre class="example">
origin  &lt;your-github-repository-path&gt; (fetch)
origin  &lt;your-github-repository-path&gt; (push)
</pre>
</li>
<li>It has the <i>master</i> branch checked-out.
</li>
<li>This <code>_deploy</code> directory is in the main repos <code>.gitignore</code> file.
</li>
</ul>

<p>
So, when you want to set-up a secondary machine where you can maintain
your site, you must manually checkout a copy of the repo into the
<code>_deploy</code> sub-directory and make sure the <code>master</code> branch is
checked-out.
</p>

<p>
One other note about this:  If you get an error from Jeckyl when it
tries to deploy your site when it tries to push <i>master -&gt; master</i>,
you need to go into the <code>_deploy</code> subdirectory and do something like
this:
</p>

<div class="org-src-container">

<pre class="src src-sh">git fetch origin
git rebase origin master
git push origin master
</pre>
</div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Scrolling on Asus C200MA-EDU-4GB]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-fixing-scrolling-on-asus-c200ma-edu-4gb.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/fixing-scrolling-on-asus-c200ma-edu-4gb</id>
    <content type="html"><![CDATA[<p>
One thing that really bugged me with my new ASUS C22MA Chromebook was
the way that trackpad scrolling worked.  By default it is exactly the
opposite of my MacBook Pro.
</p>

<p>
<!-- more -->
</p>

<p>
Google <a href="https://support.google.com/chromebook/answer/2583287?hl=en">documents the way to change this</a>, but that was not working on
my Chromebook because when I went to the <i>Device</i> section of the
<i>Settings</i> because it indicated that no trackpad was found.
</p>

<p>
As it turns out, the fix is pretty simple.  I just switched from the
<i>stable</i> channel to the <i>beta</i> channel.  After the update completed
all was fine.
</p>

<p>
Switching channels is easy:
</p>

<ul class="org-ul">
<li>Click on the status area in the lower-right corner of the screen.
</li>
<li>Select <i>Settings</i>
</li>
<li>Click the <i>About Chroms OS</i> link in the upper-right corner of the
<i>Settings</i> window.
</li>
<li>Click the <i>More info&#x2026;</i> link just below the button labelled <i>Check
for and apply updates</i>.
</li>
<li>Click on the <i>Change channel&#x2026;</i> button and follow the directions.
</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using a Chromebook as a Development Machine]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-03-using-a-chromebook-as-a-development-machine.html"/>
    <updated>2015-01-03T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/using-a-chromebook-as-a-development-machine</id>
    <content type="html"><![CDATA[<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Introduction</h2>
<div class="outline-text-2" id="text-1">
<p>
I have been interested in seeing if would be possible to set-up a
<a href="https://www.google.com/chrome/devices/">Chromebook</a> so that some serious development work with it.  It&#8217;s a
given that you won&#8217;t be running any virtual machines on a Chromebook.
But at this point I think you can do pretty much any thing else you
might need to do.
</p>

<p>
<!-- more -->
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">A Minimal Chromebook</h2>
<div class="outline-text-2" id="text-2">
<p>
First of all, let me say that I think that you need, at a minimum, a
Chromebook that has 4GB of RAM and 32GB of local storage.  I decided
on the <a href="http://smile.amazon.com/gp/product/B00KGI4XBI">ASUS model C200MA-EDU-4GB</a>.  This machine is very inexpensive,
has a decent display and keyboard, and meets my minimum RAM/storage
requirements.
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Options</h2>
<div class="outline-text-2" id="text-3">
<p>
As I see it, there are at least two options you can choose that will
let you use a Chromebook as a serious development machine.  I have
tried both of these and am now using a combination of the two.
</p>

<p>
The first option is to use a basically stock Chromebook in conjunction
with an inexpensive Virtual Private Server (VPS).  For this to be a
viable option you must be doing your work someplace where you have a
decent Internet connection.  
</p>

<p>
You rent a VPS, install a nice Linux. I like Ubuntu 14.04 LTS (Trusty
Tahr).  You install all of your tools there and use the Chromebook as
a portable terminal that lets you access these tools.
</p>

<p>
But what if you want the option of doing useful work from anywhere,
whether or not you have a good Internet connection? In that case, we
take a look at the second option.
</p>

<p>
The second option is to enable developer mode on your Chromebook,
install Linux in a chroot environment along with whatever tools you
need, and work in ChromeOS or your chroot environment as needed.
</p>

<p>
This turns out to be extremely easy to accomplish.  The remainder of
this post will cover the steps I followed to get this going.
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">Enabling dev mode</h2>
<div class="outline-text-2" id="text-4">
<p>
The exact procedure required to enable dev mode will vary from one
Chromebook to another.  For an Asus C200 it is extremely simple.
</p>

<ol class="org-ol">
<li>Tap the power button while pressing and holding the <i>esc</i> an
<i>refresh</i> buttons.  Note that the <i>refresh</i> button is on the top
row of keys and looks like a circular arrow.
</li>
<li>The Chromebook will reboot and you will see a screen that tells you
that Chrome OS is missing or damaged.  Just hit <code>ctrl-d</code> and then
<i>enter</i> to continue.
</li>
<li>The computer will restart and you will see a screen that tells you
OS verification is off.  Hit <code>ctrl-d</code> to continue.
</li>
<li>Go take a break while your Chromebook&#8217;s data is reset.  I didn&#8217;t
pay attention to how long it took, but you will get a textual
progress bar at the top of the window while this is in progress.
</li>
<li>When it finally comes back up just connect to your wireless network
and log-in as normal.
</li>
</ol>

<p>
<b>Note:</b> From this point on you will always see the verification screen
when you restart.  No worries, just hit <code>ctrl-d</code> to proceed.
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">Installing the Crouton Integration Chrome extension</h2>
<div class="outline-text-2" id="text-5">
<p>
This is pretty cool.  It lets you run your Linux windowing manager in
a Chrome frame that shows up on your dock at the bottom of the
screen.  Let&#8217;s go ahead and install it now so that it will be in place
when your Ubuntu installation has finished.
</p>

<ul class="org-ul">
<li>From Chrome, navigate <a href="https://chrome.google.com/webstore/detail/crouton-integration/gcpneefbbnfalgjniomfjknbcgkbijom">to this URL</a> and install the extension.  That&#8217;s
it!
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6">Installing Ubuntu via Crouton</h2>
<div class="outline-text-2" id="text-6">
<p>
Crouton stands for <i>Chromium OS Universal Chroot Environment</i>.  It is
a very nice shell script that greatly simplifies the process of
installing and running your Linux environment on the Chromebook.
</p>

<ul class="org-ul">
<li><a href="https://goo.gl/fd3zc">Click here</a> from Chrome to download the latest version of the script.
</li>
<li>Pull up a terminal window as follows:
<ul class="org-ul">
<li>Hit <code>ctrl+alt+t</code>
</li>
<li>Type <code>shell</code> and hit <i>enter</i>.
</li>
<li>Type <code>cd ~/Downloads</code> and hit <i>enter</i>.
</li>
<li>If you then enter <code>ls</code> you should see the Crouton script you just
downloaded.
</li>
</ul>
</li>
</ul>

<p>
The instructions that follow assume that you want to install Ubuntu
14.04 LTS using the <code>xfce</code> window manager.
</p>

<ul class="org-ul">
<li>Type <code>sudo sh -e ./crouton -r trusty -t xfce,xiwi</code> and hit <i>enter</i>.
</li>
<li>After everything is installed you will be asked to enter a username
and password.
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7">Running Ubuntu</h2>
<div class="outline-text-2" id="text-7">
<p>
Here is the basic procedure for entering your chroot environment and
starting your Ubuntu environment.
</p>

<ul class="org-ul">
<li>If necessary, get a terminal session going.  Remember the steps to
do this?
<ul class="org-ul">
<li>Hit <code>ctrl+alt+t</code>
</li>
<li>Type <code>shell</code> and hit <i>enter</i>.
</li>
</ul>
</li>
<li>Enter the chroot environment by typing <code>sudo enter-chroot</code> and
hitting <i>enter</i>.
</li>
<li>Start up the Ubuntu UI by typing <code>startxfce4</code> and hitting <i>enter</i>.
</li>
<li>As a shortcut you can do the following:
<ul class="org-ul">
<li>Pull up a terminal session
</li>
<li>Types <code>sudo startxfce4</code> and hit <i>enter</i>.
</li>
</ul>
</li>
</ul>


<p>
By default this will start up the Ubuntu windowing system in full
screen mode.  To toggle fullscreen mode just hit what would be the F4
button on the top row of the keyboard.  On my Asus this button looks
like a rectangle with little arrow-heads in the top-left and
bottom-right corners.  Google calls this <i>immersive mode</i>.
</p>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8">References</h2>
<div class="outline-text-2" id="text-8">
<p>
These are some of the sites I read through when setting up the
Chromebook:
</p>

<ul class="org-ul">
<li><a href="http://liliputing.com/2014/06/asus-c200-chromebook-enabling-dev-mode-installing-ubuntu.html">Asus C200 Chromebook: Enabling dev mode, installing Ubuntu</a>
</li>
<li><a href="http://www.howtogeek.com/162120/how-to-install-ubuntu-linux-on-your-chromebook-with-crouton/">How to Install Ubuntu Linux on Your Chromebook with Crouton</a>
</li>
<li><a href="https://github.com/dnschneid/crouton">David Schneider&#8217;s Crouton GitHub Page</a>
</li>
<li><a href="https://github.com/dnschneid/crouton/wiki/Security">David Schneider on Security</a>
</li>
<li><a href="https://sites.google.com/site/chromeoswikisite/home">The Chrome OS Wiki</a>
</li>
<li><a href="http://tomwwolf.com/chromebook-14-compedium/chromebook-crouton-cookbook/">Tom Wolf&#8217;s Crouton Cookboook</a>
</li>
<li><a href="https://plus.google.com/u/0/+FrancoisBeaufort/posts/JDVkXALPcNq">François Beaufort&#8217;s Google+ Profile Page</a>
</li>
<li><a href="http://fuyuko.net/basic-tweaks-and-tips-for-crouton-in-chromebook/">Fuyuko Gratton&#8217;s Basic Tweaks and Tips for Crouton in Chromebook</a>
</li>
<li><a href="http://www.postslush.com/2014/12/crouton-ubuntu-running-in-browser-tab.html">Crouton Ubuntu running in a browser tab of a Chromebook</a>
</li>
<li><a href="https://support.google.com/chromebook/answer/183093?hl=en">Google&#8217;s Supported file types and external devices</a>
</li>
<li><a href="https://support.google.com/chromebook/answer/1047364?hl=en">Google&#8217;s Chromebook Keyboard Features</a>
</li>
<li><a href="http://vpsdime.com/">vpsdime</a> - Where my VPS lives
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SBCL and Slime on Ubuntu 14.04]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-03-sbcl-and-slime-on-ubuntu-14.04.html"/>
    <updated>2015-01-03T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/sbcl-and-slime-on-ubuntu-14.04</id>
    <content type="html"><![CDATA[<p>
This post describes how to install and configure Steel Bank Common
Lisp (SBCL) with SLIME (Superior Lisp Interaction Mode) that is
installed via <a href="http://www.quicklisp.org/">Quicklisp</a> on Ubuntu 14.04 LTS (Trusty Tahr).
</p>


<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Install SBCL</h2>
<div class="outline-text-2" id="text-1">
<div class="org-src-container">

<pre class="src src-sh">sudo apt-get instal sbcl sbcl-doc
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Install Quicklisp</h2>
<div class="outline-text-2" id="text-2">
<div class="org-src-container">

<pre class="src src-sh">curl -O http://beta.quicklisp.org/quicklisp.lisp
sbcl --load quicklisp.lisp
(quicklisp-quickstart:install)
(ql:add-to-init-file)
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Install slime via quicklisp</h2>
<div class="outline-text-2" id="text-3">
<p>
While still in the SBCL session
</p>

<div class="org-src-container">

<pre class="src src-sh">(ql:quickload <span style="color: #70c0b1;">"quicklisp-slime-helper"</span>)
</pre>
</div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Emacs 24.4 on Ubuntu 14.04]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-01-building-emacs-24.4-on-ubuntu-14.04.html"/>
    <updated>2015-01-01T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/building-emacs-24.4-on-ubuntu-14.04</id>
    <content type="html"><![CDATA[<p>
I recently signed up for a Virtual Private Server (VPS) with <a href="https://vpsdime.com">vpsdime</a>.
The idea is to set-up a complete development environment for all of my
work and personal projects that I can access from a low-end device
like a <a href="https://www.google.com/chrome/devices/">Chromebook</a> or an <a href="https://www.apple.com/ipad/">iPad</a> (with a suitable SSH app installed).
</p>

<p>
<!-- more -->
</p>

<p>
I opted for the <i>High RAM VPS</i>, which has the following
specifications:
</p>

<ul class="org-ul">
<li>6 GB RAM
</li>
<li>4 CPUs
</li>
<li>30GB Storage
</li>
<li>2TB/month traffic
</li>
<li>10 Gb connection
</li>
</ul>

<p>
It is very reasonably priced at only $7.00/month.  I had it spun up
with Ubuntu 14.04 LTS.
</p>

<p>
My first requirements were installing <a href="http://www.gnu.org/software/emacs/">Emacs 24.4</a> 24.3 is the only
version available in the repositories and I found no <a href="https://launchpad.net/ubuntu/+ppas">Personal Package
Archive (PPA)</a> that already supplied it. The remainder of this post
documents the steps required to do this.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Dependencies</h2>
<div class="outline-text-2" id="text-1">
<p>
There are a few things you need to have installed before you can build
Emacs.  You need to update your list of <a href="https://help.ubuntu.com/community/Repositories/CommandLine">repository sources</a> first.
</p>

<p>
Edit the file <code>/etc/apt/sources.list</code> as root.  On a new Ubuntu 14.04 instance
it looks like this:
</p>

<pre class="example">
deb http://archive.ubuntu.com/ubuntu trusty main restricted universe
deb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe
deb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse
deb http://archive.canonical.com/ubuntu trusty partner
</pre>

<p>
You need to enable the source code repositories.  This is very simple
to do.  Just duplicate the first four lines in the file and change
<code>deb</code> at the beginning of the line to <code>deb-src</code>.  When you have done
this the file will look like this:
</p>

<pre class="example">
deb http://archive.ubuntu.com/ubuntu trusty main restricted universe
deb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe
deb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse
deb http://archive.canonical.com/ubuntu trusty partner
deb-src http://archive.ubuntu.com/ubuntu trusty main restricted universe
deb-src http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe
deb-src http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse
deb-src http://archive.canonical.com/ubuntu trusty partner
</pre>

<p>
Save your changes and then run the following command:
</p>

<div class="org-src-container">

<pre class="src src-sh">sudo apt-get update
</pre>
</div>

<p>
Now you can install the dependencies that you will need:
</p>

<div class="org-src-container">

<pre class="src src-sh">sudo apt-get install build-essential
sudo apt-get build-dep emacs24
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Building Emacs 24.4</h2>
<div class="outline-text-2" id="text-2">
<p>
I like to organize my projects in a directory hierarchy like this:
</p>

<ul class="org-ul">
<li><code>$HOME/Projects/</code>
<ul class="org-ul">
<li><code>0-9/</code>
</li>
<li><code>a/</code>
</li>
<li><code>b/</code>
</li>
<li>&#x2026;
</li>
<li><code>z/</code>
</li>
</ul>
</li>
</ul>

<p>
So, my Emacs build would be located in the <code>$HOME/Projects/e</code>
directory.  Please feel free to ignore the above.  It is just a
personal preference.  With that out of the way, here we go&#x2026;
</p>

<div class="org-src-container">

<pre class="src src-sh">mkdir -p $<span style="color: #e7c547;">HOME</span>/Projects/e
<span style="color: #c397d8;">cd</span> $<span style="color: #e7c547;">HOME</span>/Projects/e
wget ftp.gnu.org/gnu/emacs/emacs-24.4.tar.xz
tar -xf emacs-24.4.tar.xz
rm emacs-24.4.tar.xz
<span style="color: #c397d8;">cd</span> emacs-24.4
./configure
make
sudo make install
</pre>
</div>

<p>
That&#8217;s all there is to it!
</p>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing Octopress Configuration]]></title>
    <link href="http://blog.gordontillman.info/blog/2014-11-26-testing-octopress-configuration.html"/>
    <updated>2014-11-26T15:03:35-06:00</updated>
    <id>http://blog.gordontillman.info/blog/testing-octopress-configuration</id>
    <content type="html"><![CDATA[<p>This is just a simple <em>test post</em> to see if I have the basic
<a href="http://octopress.org">Octopress</a> configuration done correctly.  I
tried also getting
<a href="https://github.com/yoshinari-nomura/org-octopress">org-octopress</a>
configured at the same time but I am getting an error when I evaluate
the <code>org-octopress</code> command, so I will get to that later.</p>

<h1>Heading One</h1>

<h2>Heading Two</h2>

<h3>Heading Three</h3>

<h4>Heading Four</h4>

<h1>Tables?</h1>

<p>Are tables supported? Let&rsquo;s find out!</p>

<table>
<thead>
<tr>
<th> <strong>Heading One</strong> </th>
<th> <strong>Heading Two</strong> </th>
</tr>
</thead>
<tbody>
<tr>
<td> Row One, Column 1 </td>
<td> Row One, Column 2 </td>
</tr>
<tr>
<td> Row Two, Column 1 </td>
<td> Row Two, Column 2 </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Second Post: This Time With Org]]></title>
    <link href="http://blog.gordontillman.info/blog/2014-11-26-second-post,-this-time-with-org.html"/>
    <updated>2014-11-26T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/second-post,-this-time-with-org</id>
    <content type="html"><![CDATA[<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Testing Org-Octopress</h2>
<div class="outline-text-2" id="text-1">
<p>
This is a test post using <a href="https://github.com/yoshinari-nomura/org-octopress">org-octopress</a>&#x2026;
</p>

<p>
<!-- more -->
</p>

<p>
OK, this is a test post that we are composing in <a href="http://orgmode.org">org-mode</a>.
</p>

<p>
Let&#8217;s first try a simple org table:
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left"><b>Heading One</b></th>
<th scope="col" class="left"><b>Heading Two</b></th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">Row One, Column 1</td>
<td class="left">Row One, Column 2</td>
</tr>

<tr>
<td class="left">Row Two, Column 1</td>
<td class="left">Row Two, Column 2</td>
</tr>

<tr>
<td class="left">Row Three, Column 1</td>
<td class="left">Row Three, Column 2</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Heading One</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1">Heading Two</h3>
<div class="outline-text-3" id="text-2-1">
</div><div id="outline-container-sec-2-1-1" class="outline-4">
<h4 id="sec-2-1-1">Heading Three</h4>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Simple List</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>Simple List Item 1
</li>
<li>Simple List Item 2
</li>
<li>Simple List Item 3
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">Numbered List</h2>
<div class="outline-text-2" id="text-4">
<ol class="org-ol">
<li>Numbered List Item 1
</li>
<li>Numbered List Item 2
</li>
<li>Numbered List Item 3
</li>
<li>Numbered List Item 4
</li>
</ol>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liquid Exception: Undefined Method Sort]]></title>
    <link href="http://blog.gordontillman.info/blog/2014-11-26-liquid-exception:-undefined-method-sort.html"/>
    <updated>2014-11-26T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/liquid-exception:-undefined-method-sort</id>
    <content type="html"><![CDATA[<p>
I was getting this strange error when I tried to generate my site via
the <code>rake generate</code> command:
</p>

<pre class="example">
## Generating Site with Jekyll
identical source/stylesheets/screen.css
Configuration file: /Users/gordy/Documents/Personal/gordyt.github.io/_config.yml
            Source: source
       Destination: public
      Generating...
  Liquid Exception: undefined method `sort!' for nil:NilClass in _includes/post/categories.html, included in _layouts/post.html
jekyll 2.5.2 | Error:  undefined method `sort!' for nil:NilClass
</pre>

<p>
<!-- more -->
</p>

<p>
Did some search about and found <a href="http://uli-heller.github.io/blog/2013/08/04/octopress-category-generator/">this website</a>.  It is in German;
however the code sample was clear.  The fix was to edit the file
<code>plugins/category_generator.rb</code> as follows:
</p>

<div class="org-src-container">

<pre class="src src-ruby"><span style="color: #b9ca4a;">def</span> <span style="color: #e78c45;">category_links</span>(categories)
  <span style="color: #b9ca4a;">if</span> categories != <span style="color: #e7c547;">nil</span>     <span style="color: #969896; font-style: italic;"># </span><span style="color: #969896; font-style: italic;">Added this line</span>
    categories = categories.sort!.map { |c| category_link c }

    <span style="color: #b9ca4a;">case</span> categories.length
    <span style="color: #b9ca4a;">when</span> 0
      <span style="color: #70c0b1;">""</span>
    <span style="color: #b9ca4a;">when</span> 1
      categories[0].to_s
    <span style="color: #b9ca4a;">else</span>
      <span style="color: #70c0b1;">"</span><span style="color: #e7c547;">#{categories[0...-1].join(', ')}</span><span style="color: #70c0b1;">, </span><span style="color: #e7c547;">#{categories[-1]}</span><span style="color: #70c0b1;">"</span>
    <span style="color: #b9ca4a;">end</span>
  <span style="color: #b9ca4a;">end</span>                      <span style="color: #969896; font-style: italic;"># </span><span style="color: #969896; font-style: italic;">Added this line</span>
<span style="color: #b9ca4a;">end</span>
</pre>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Layered Garden Salad]]></title>
    <link href="http://blog.gordontillman.info/blog/2014-11-26-layered-garden-salad.html"/>
    <updated>2014-11-26T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/layered-garden-salad</id>
    <content type="html"><![CDATA[<p>
This is a great recipe from page 105 of <i>¡Delicioso! Cooking South
Texas Style</i>, compiled by the Junior League of Corpus Christi, Inc.,
ISBN <code>0-9609144-0-4</code>.
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Ingredients</h2>
<div class="outline-text-2" id="text-1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">1 head</td>
<td class="left">iceberg lettuce, washed and torn into bite-size pieces</td>
</tr>

<tr>
<td class="left">1/2 lb</td>
<td class="left">fresh spinach, washed well and torn</td>
</tr>

<tr>
<td class="left">2 cups</td>
<td class="left">fresh broccoli flowerets</td>
</tr>

<tr>
<td class="left">1 10-oz pkg</td>
<td class="left">frozen green peas</td>
</tr>

<tr>
<td class="left">1 cup</td>
<td class="left">sour cream</td>
</tr>

<tr>
<td class="left">1 cup</td>
<td class="left">mayonnaise</td>
</tr>

<tr>
<td class="left">1 to 2 tbsp</td>
<td class="left">sugar</td>
</tr>

<tr>
<td class="left">1 lb.</td>
<td class="left">bacon, cooked and crumbled</td>
</tr>

<tr>
<td class="left">1 cup</td>
<td class="left">grated Swiss cheese</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Procedure</h2>
<div class="outline-text-2" id="text-2">
<p>
Layer the lettuce, spinach, broccoli, and peas in a 3 quart glass
bowl or rectangular pan.  I always use one of the disposable aluminum
pans that you can get from the grocery store.  Get the ones that come
with a snap-on plastic lid.
</p>

<p>
Mix sour cream and mayonnaise well and spread evenly over the
top, sealing to the edge.  Sprinkle evenly with sugar, then bacon,
then cheese.
</p>

<p>
Cover the container tightly and refrigerate at least 2 hours to allow
the flavors to blend.  I alway try and make it a day ahead of time.
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Finished Recipe</h2>
<div class="outline-text-2" id="text-3">
<img src="http://blog.gordontillman.info/images/2014-11-26-layered-garden-salad/salad.jpg">
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BulletJournal Updates]]></title>
    <link href="http://blog.gordontillman.info/blog/2014-11-26-bulletjournal-updates.html"/>
    <updated>2014-11-26T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/bulletjournal-updates</id>
    <content type="html"><![CDATA[<p>
I have been using Ryder Carroll&#8217;s <a href="http://www.bulletjournal.com">BulletJournal</a> techniques for
organizing my analog journal for about 6 months now.  There are
several things I really like about this system.
</p>

<ul class="org-ul">
<li>It is easy to maintain
</li>
<li>It lets you carry around just <i>one</i> paper journal that you can use
for everything; e.g., to-do lists, project notes, work and activity
tracking, study notes, etc.
</li>
<li>It is very easy to customize to fit your needs.
</li>
</ul>

<p>
Regarding that last point, I would like to share my current setup.
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Pages</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1">Main Index (one full spread)</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>Page Title: <code>Index &lt;from-date&gt;-&lt;to-date&gt;</code>
</li>
<li>Entries for
<ul class="org-ul">
<li>Monthly calendars
</li>
<li>Collections
</li>
</ul>
</li>
<li>Page numbers recorded on right side
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2">Recurring Tasks (one full spread)</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>Page Title: <code>Recurring Tasks</code>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3">Future Tasks (one full spread)</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>Page Title: <code>Future Tasks</code>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4">Monthly Calendar/Tasks (two spreads, if necessary)</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>Page Title: <code>yyyy-mm (month)</code>
</li>
<li>Left two columns for every other row (two rows per day. if necessary
carry-over to second spread)
<ul class="org-ul">
<li>day (1-31)
</li>
<li>two letters of weekday; e.g., &#8216;Mo&#8217; for monday, etc.
</li>
</ul>
</li>
<li>Right side of first row for each day
<ul class="org-ul">
<li>Page number for the start of the Daily Calendar for that day
</li>
</ul>
</li>
<li>Entries 
<ul class="org-ul">
<li>enter significant events on that day
</li>
<li>appointments
</li>
<li>task references
</li>
</ul>
</li>
<li>Monthly tasks are listed following last day of month
<ul class="org-ul">
<li>Enter TODO items for the month (see Bullets below)
</li>
<li>Include day numbers or weekday names in square brackets
</li>
<li>Examples:
<ul class="org-ul">
<li>@E ☐ TODO [WE] Flowers For Mikie
</li>
<li>@H ☐ TODO [1, 15] Vacuum the cats
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5">Daily Calendar</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li>Title: <code>yyyy-mm-dd (day)</code>
</li>
<li>Entries: See Bullets below
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6">Collections</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li>Title: Whatever is appropriate for the collection
</li>
<li>Entries: See Bullets below
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7">Continuation Markers</h3>
<div class="outline-text-3" id="text-1-7">
<ul class="org-ul">
<li>Used if Index, Calendar, or Collection fills up page and has to carry to
another page
</li>
<li>Add <code>--&gt; &lt;new-page-number&gt;</code> at top of original page (by title)
</li>
<li>Add <code>&lt;-- &lt;old-page-number&gt;</code> at top of new page (by title)
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8">Bullets</h3>
<div class="outline-text-3" id="text-1-8">
<ul class="org-ul">
<li>These are used to mark the type of entry that follows
<ul class="org-ul">
<li>◯ event entry
</li>
<li>☐ TODO entry
<ul class="org-ul">
<li>Leave two grids on left of marker for GTD contexts:
<ul class="org-ul">
<li>@A - Anywhere
</li>
<li>@C - Computer
</li>
<li>@E - Errand
</li>
<li>@H - Home
</li>
<li>@M - Meeting (Agenda)
</li>
<li>@O - Office
</li>
<li>@P - Phone
</li>
<li>@S - Someday/Maybe
</li>
<li>@W - Waiting-For
</li>
</ul>
</li>
<li>Include optional due date by including [DD=mm/dd]
</li>
</ul>
</li>
<li>&middot; General Note entry
</li>
<li>&gt;&gt; Journal entry
</li>
<li>&darr; Check-In (at a location)
</li>
<li>&uarr; Check-Out (from a location)
</li>
<li>Other entries:
<ul class="org-ul">
<li>(A) Audio entry (music, podcast, audiobook)
</li>
<li>(B) Book Notes      
</li>
<li>(C) C3 - Caring, Connecting, Committing
</li>
<li>(D) Drink entry (water, coffee, wine, etc)
</li>
<li>(E) Exercise entry (cardio, resistance, stretching, etc.)
</li>
<li>(F) Food log entry (breakfast, lunch, dinner, snack)
</li>
<li>(I) Idea for project
</li>
<li>(L) Learning (language, math, etc)
</li>
<li>(M) Measurement entry (weight, blood pressure, resting heart
rate, sleep, etc.)
</li>
<li>(N) News
</li>
<li>(P) Pen/Ink/Paper related note
</li>
<li>(S) Supplements/Medicine
</li>
<li>(R) Relaxation (meditation)
</li>
<li>(W) Weather entry
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Procedures</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1">Starting New Month</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li>Initialize full-spread <i>monthly calendar</i> and full-spread <i>monthly tasks</i>.
</li>
<li>Carry over unfinished tasks from previous month
</li>
<li>Scan <i>recurring tasks</i> and write them in on new <i>monthly calendar</i>
  or <i>monthly tasks</i>
</li>
<li>Scan <i>future tasks</i> and write them in on new <i>monthly calendar</i> or
<i>monthly tasks</i>.
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2">Starting New Day</h3>
<div class="outline-text-3" id="text-2-2">
<ul class="org-ul">
<li>Initialize <i>daily calendar</i>
</li>
<li>Carry over unfinished tasks from previous day
</li>
<li>Write in any appropriate tasks or appointments from <i>monthly
calendar</i> and <i>monthly tasks</i>
</li>
</ul>
</div>
</div>
</div>
]]></content>
  </entry>
  
</feed>
