<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eamcs | GordyBlog]]></title>
  <link href="http://blog.gordontillman.info/blog/categories/eamcs/atom.xml" rel="self"/>
  <link href="http://blog.gordontillman.info/"/>
  <updated>2015-01-08T18:01:26-06:00</updated>
  <id>http://blog.gordontillman.info/</id>
  <author>
    <name><![CDATA[Gordon Tillman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Org-Octopress Notes]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-org-octopress-notes.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/org-octopress-notes</id>
    <content type="html"><![CDATA[<p>
I&#8217;ve been trying to sort-out the details of what is required to be
able to maintain a GitHub pages site via Octopress / org-octopress
from multiple computers. The slight complicating factor is that the
location of the git repository for the site is different on the two
computers that I am using.
</p>




<p>
<!-- more -->
</p>




<p>
The main laptop is my MacBook Pro.  The new, secondary, laptop is an
Asus C200 with 4GB RAM and a 32GB SSD.  Here are the repository
locations on the two machines:
</p>




<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Machine</th>
<th scope="col" class="left">Org-Octopress Git Repository Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">MacBook Pro</td>
<td class="left">/Users/gordy/Documents/Personal/gordyt.github.io</td>
</tr>

<tr>
<td class="left">Asus C200</td>
<td class="left">/media/removable/gordy/Documents/g/gordyt.github.io</td>
</tr>
</tbody>
</table>


<p><br></p>

<p>
On the Asus I have a symlink in my <code>$HOME</code> directory the the
<code>Documents</code> folder on the external drive.  The external drive is a 16
CB SD card.
</p>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Setupfile</h2>
<div class="outline-text-2" id="text-1">
<p>
Org-octopress has a setting called <code>org-octopress-setup-file</code> that
points to your blog-specific information.  It references this file
when it exports your org-mode source file to the HTML file it
that Jeckyl uses to generate your GitHub pages site.
</p>

<p>
When you create a new post, Org-octopress fills in a skeleton org-mode
file that you use to write in to compose your blog post.  When it does
this it fills in the path for a setting at the top:
</p>

<pre class="example">
#+SETUPFILE: &lt;path-to-setupfile&gt;
</pre>

<p>
For this to work nicely, it is helpful to store your setup file a
place that you can reference with a nice relative path on all the
machines involved.  In my case I used this:
</p>

<pre class="example">
~/.emacs.d/octopress-setupfile.txt
</pre>

<p>
If I were maintaining multiple sites I would give the setup file for
each site a unique name.
</p>
</div>
</div>




<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Keep your Repositories Straight!</h2>
<div class="outline-text-2" id="text-2">
<p>
The scripts that set-up your site structure handles everything for
you.  However, if you clone your existing site onto a new machine, you
must make sure that the following conditions are satisfied.  In what
follows <i>site-root</i> is the path to the main git repository on your
local machine where the site is being maintained.
</p>

<ul class="org-ul">
<li>&lt;site-root&gt; is a git repository with the following remotes:
<pre class="example">
octopress   git://github.com/imathis/octopress.git (fetch)
octopress   git://github.com/imathis/octopress.git (push)
origin  &lt;your-github-repository-path&gt; (fetch)
origin  &lt;your-github-repository-path&gt; (push)
</pre>
</li>
<li>It has the <i>source</i> branch checked-out
</li>
<li><code>&lt;site-root&gt;/_deploy</code> is a subdirectory that is maintained by
Jeckyl.  It is <i>also</i> a git repository with the following remotes:
<pre class="example">
origin  &lt;your-github-repository-path&gt; (fetch)
origin  &lt;your-github-repository-path&gt; (push)
</pre>
</li>
<li>It has the <i>master</i> branch checked-out.
</li>
<li>This <code>_deploy</code> directory is in the main repos <code>.gitignore</code> file.
</li>
</ul>

<p>
So, when you want to set-up a secondary machine where you can maintain
your site, you must manually checkout a copy of the repo into the
<code>_deploy</code> sub-directory and make sure the <code>master</code> branch is
checked-out.
</p>

<p>
One other note about this:  If you get an error from Jeckyl when it
tries to deploy your site when it tries to push <i>master -&gt; master</i>,
you need to go into the <code>_deploy</code> subdirectory and do something like
this:
</p>

<div class="org-src-container">

<pre class="src src-sh">git fetch origin
git rebase origin master
git push origin master
</pre>
</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
