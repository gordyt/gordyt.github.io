<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chromebook | GordyBlog]]></title>
  <link href="http://blog.gordontillman.info/blog/categories/chromebook/atom.xml" rel="self"/>
  <link href="http://blog.gordontillman.info/"/>
  <updated>2015-01-09T13:32:04-06:00</updated>
  <id>http://blog.gordontillman.info/</id>
  <author>
    <name><![CDATA[Gordon Tillman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Ubuntu 14.04 LTS With I3 Window Manager on Chromebook]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-09-installing-ubuntu-14.04-lts-with-i3-window-manager-on-chromebook.html"/>
    <updated>2015-01-09T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/installing-ubuntu-14.04-lts-with-i3-window-manager-on-chromebook</id>
    <content type="html"><![CDATA[<p>
In this post I document the steps required to install and configure
Ubuntu 14.04 LTS (Trusty Tahr) on an ASUS C200MA-EDU-4GB Chromebook.
</p>




<p>
<!-- more -->
</p>




<p>
I&#8217;m going to assume that you have already downloaded <a href="https://github.com/dnschneid/crouton">Crouton</a>.
</p>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Install the base system</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>Hit <code>Ctrl+Alt+t</code> to start a <i>crosh</i> shell
</li>
<li>Enter <code>shell</code> to start a proper shell.
</li>
<li>Enter <code>cd Downloads</code>
</li>
<li>Install the base system by entering
<div class="org-src-container">

<pre class="src src-sh">~sudo sh -e ./crouton -r trusty -t x11,extension -n trusty-i3
</pre>
</div>
<ul class="org-ul">
<li>Follow the directions
</li>
</ul>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Install the window manager</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li><code>sudo enter-chroot -n trusty-i3</code>
</li>
<li><code>sudo apt-get install i3</code>
<ul class="org-ul">
<li>allow it to create a default configuration file
</li>
</ul>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Install a decent terminal</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><code>sudo apt-get install gnome-terminal</code>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">Install the Adobe Source Code Pro Fonts</h2>
<div class="outline-text-2" id="text-4">
<p>
I love these fonts!
</p>

<ul class="org-ul">
<li>Navigate to Adobe&#8217;s github download page <a href="https://github.com/adobe-fonts/source-code-pro/releases/">here</a>.
</li>
<li>Download the tar.gz format
</li>
<li>Assuming that your chroot is running&#x2026;.
<ul class="org-ul">
<li>From the ChromeOS side do <code>Ctrl+Alt+t</code> to open a terminal
</li>
<li>Enter <code>shell</code>, then <code>cd ~/Downloads</code>
</li>
<li>Untar the archive.  For me it was: <code>tar xfz source-code-pro-1.017R.tar.gz</code>
</li>
<li>CD into the extracted archive&#8217;s OTF directory: <code>cd source-code-pro-1.017R/OTF</code>
</li>
<li>Copy the fonts over to the chroot.  For me this was:
<div class="org-src-container">

<pre class="src src-sh">sudo cp * /usr/local/chroots/trusty-i3/usr/share/fonts/opentype/
</pre>
</div>
</li>
</ul>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">Set i3 to start automaticall when you startx</h2>
<div class="outline-text-2" id="text-5">
<p>
Do this from in your chroot.
</p>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #c397d8;">echo</span> <span style="color: #70c0b1;">"exec i3"</span> &gt; ~/.xinitrc
</pre>
</div>
</div>
</div>




<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6">Make an easy alias for starting your windowing system</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li>Exit out of the chroot
</li>
<li>From inside your <code>crosh/shell</code>:
<ul class="org-ul">
<li>Edit <code>$HOME/.bashrc</code>
</li>
<li>Add this alias: 
<pre class="example">
alias starti3='sudo enter-chroot -n trusty-i3 xinit'
</pre>
</li>
</ul>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7">Tweak a couple of i3 settings</h2>
<div class="outline-text-2" id="text-7">
<p>
Back in the chroot, edit the file <code>$HOME/.i3/config</code>
</p>

<ul class="org-ul">
<li>Use the Search key as your i3 mod key
<pre class="example">
set $mod Mod4
</pre>
</li>
<li>Use Adobe&#8217;s Source Code Pro font as your default font
<pre class="example">
font pango:Source Code Pro 12
</pre>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8">References</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li><a href="https://github.com/dnschneid/crouton">The Crouton Homepage</a>
</li>
<li><a href="https://github.com/dnschneid/crouton/wiki/i3">Using i3 in crouton</a>
</li>
<li><a href="https://i3wm.org/">i3 - improved tiling wm</a>
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9">Tips</h2>
<div class="outline-text-2" id="text-9">
<ul class="org-ul">
<li>Audio from the chroot will now be forwared to CRAS (Chromium OS
audio server).
</li>
<li>To switch from chroot to ChromeOS: <code>Ctrl-Alt-Shift-Forward</code>
</li>
<li>To switch from ChromeOS back to chroot: <code>Ctrl-Alt-Forward</code> then
<code>Ctrl-Alt-Refresh</code>
</li>
</ul>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mounting External Drives - Ubuntu 14.04 and Chromebook]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-08-mounting-external-drives---ubuntu-14.04-and-chrombook.html"/>
    <updated>2015-01-08T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/mounting-external-drives&#8212;ubuntu-14.04-and-chrombook</id>
    <content type="html"><![CDATA[<p>
OK, this post is part of my continuing experiments with an ASUS C200
Chromebook.  I have installed Ubuntu 14.04 using <i>crouton</i>.
</p>




<p>
I had created two partitions on a Micro SD Card, one as Fat32 (EsFat
actually) and the other as ext4.  
</p>




<p>
The FAT32 partition mounts at <code>/media/removeable/share</code> and the ext4
partition mounts at <code>/media/removeable/gordy</code>.  I tried storing
various projects on the ext4 partition but when I tried to build from
that partition I would get a permissions error.
</p>




<p>
<!-- more -->
</p>




<p>
Long story short, it turns out that the the ChromeOS side is mounting
the ext4 partition with <i>noexec</i> permissions.  That was causing all
the problems.  The solution turned out to be simple.  Just a single
command to remount the partition (issued from the Ubuntu side) does
the trick:
</p>




<div class="org-src-container">

<pre class="src src-sh">sudo mount -t ext4 -o remount,rw /dev/mmcblk1p1 /var/host/media/removable/gordy
</pre>
</div>




<p>
So, in the above command:
</p>




<ul class="org-ul">
<li><code>-t ext4</code> is the type of the partition.  I had previously formatted
it as ext4.
</li>
<li><code>-o remount,rw</code> tells the system to remote the partition with
read/write privileges
</li>
<li><code>/dev/mmcblk1p1</code> is the path to the partition that needs to be
mounted.  It will likely be different on your machine.  You can find
out what your device path is by just typing <code>mount</code> with no
arguments and grepping for the name of the volume.
</li>
<li><code>/var/host/media/removable/gordy</code> is the mount point.  A careful
reader will notice that this is different than what I wrote at the
top of the post (<code>/media/removeable/gordy</code>).  Well as it turns out
<code>/media/removeable</code> is a symbolic link to
<code>/var/host/media/removeable</code> and if you try to mount to
<code>/media/removeable/gordy</code> the mount command complains about trying
to follow too many symbolic links.  Please note that this mount path
will also be different on you machine, unless you named your
partition &#8220;gordy&#8221; as well. :-)
</li>
</ul>




<p>
Anyway, after remounting I am able to use my ext4 partition to hold
projects and be able to <code>./configure</code> and <code>make</code> out of directories on
the partition just fine.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chromebook Performance Test - C720 vs C200]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-08-chromebook-performance-test---c720-vs-c200.html"/>
    <updated>2015-01-08T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/chromebook-performance-test&#8212;c720-vs-c200</id>
    <content type="html"><![CDATA[<p>
My buddy at work just got a new Acer C720-3404 Chromebook.  I have the
ASUS C200MA-EDU-4GB Chromebook.  We decided to do a real-world
performance comparison with a sample task that we have to perform all
of the time.
</p>




<p>
<!-- more -->
</p>




<p>
This task was compiling a program.  We choose to compile Emacs 24.4.
Here are the results.
</p>




<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left"><b>Task</b></th>
<th scope="col" class="left"><b>Acer C720</b></th>
<th scope="col" class="left"><b>ASUS C200</b></th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">./configure</td>
<td class="left">37.1 seconds</td>
<td class="left">1 minute, 7.4 seconds</td>
</tr>

<tr>
<td class="left">make</td>
<td class="left">3 minutes, 2.2 seconds</td>
<td class="left">5 minutes, 44.3 seconds</td>
</tr>
</tbody>
</table>




<p>
As you can see, the Acer C720 with its <i>1.7 GHz Core i3</i> processor 
was much faster than the ASUS with its <i>2.16 GHz Celeron</i> processor.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Chrooted Desktop in Background]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-running-chrooted-desktop-in-background.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/running-chrooted-desktop-in-background</id>
    <content type="html"><![CDATA[<p>
I made a post yesterday that covered the steps required to install
Ubuntu on an ASUS C200 Chromebook.  One thing I noticed was that,
while you are running Ubuntu, it ties up your terminal window and
makes it unavailable for doing other tasks.
</p>




<p>
<!-- more -->
</p>




<p>
According to some information that <a href="https://github.com/dnschneid/crouton">I found here</a>, you should be able to
accomplish this via a parameter supplied to the <code>startxfce4</code> command.
For example:
</p>




<pre class="example">
startxfce4 -b
</pre>




<p>
That didn&#8217;t seem to work for me.  The command still ran in the foreground.
I found that just using the standard Unix/Linux way worked fine:
</p>




<div class="org-src-container">

<pre class="src src-sh">startxfce4 &gt; /dev/null 2&gt;&amp;1 &amp;
</pre>
</div>




<p>
<i>Note:</i>  You cannot prefix this with <code>nohup</code> and close out the
terminal completely.  Doing so will exit the chroot environment and
terminate Ubuntu.  But at least you know have access to the
command-line in that terminal and you don&#8217;t have to look at a bunch of
debug messages.
</p>




<p>
So far this Chromebook experiment is going very well. Lot&#8217;s of fun!
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Scrolling on ASUS C200MA-EDU-4GB]]></title>
    <link href="http://blog.gordontillman.info/blog/2015-01-04-fixing-scrolling-on-asus-c200ma-edu-4gb.html"/>
    <updated>2015-01-04T00:00:00-06:00</updated>
    <id>http://blog.gordontillman.info/blog/fixing-scrolling-on-asus-c200ma-edu-4gb</id>
    <content type="html"><![CDATA[<p>
One thing that really bugged me with my new ASUS C22MA Chromebook was
the way that track-pad scrolling worked.  By default it is exactly the
opposite of my MacBook Pro.
</p>




<p>
<!-- more -->
</p>




<p>
Google <a href="https://support.google.com/chromebook/answer/2583287?hl=en">documents the way to change this</a>, but that was not working on
my Chromebook because when I went to the <i>Device</i> section of the
<i>Settings</i> because it indicated that no trackpad was found.
</p>




<p>
As it turns out, the fix is pretty simple.  I just switched from the
<i>stable</i> channel to the <i>beta</i> channel.  After the update completed
all was fine.
</p>




<p>
Switching channels is easy:
</p>




<ul class="org-ul">
<li>Click on the status area in the lower-right corner of the screen.
</li>
<li>Select <i>Settings</i>
</li>
<li>Click the <i>About ChromeOS</i> link in the upper-right corner of the
<i>Settings</i> window.
</li>
<li>Click the <i>More info&#x2026;</i> link just below the button labeled <i>Check
for and apply updates</i>.
</li>
<li>Click on the <i>Change channel&#x2026;</i> button and follow the directions.
</li>
</ul>

]]></content>
  </entry>
  
</feed>
